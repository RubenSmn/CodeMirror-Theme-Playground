import { tags as t } from '@codemirror/highlight';

export const tagTree = {
  'comment': {
    'lineComment': {},
    'blockComment': {},
    'docComment': {},
  },
  'name': {
    'variableName': {},
    'typeName': {
      'tagName': {},
    },
    'propertyName': {
      'attributeName': {},
    },
    'className': {},
    'labelName': {},
    'namespace': {},
    'macroName': {},
  },
  'literal': {
    'string': {
      'docString': {},
      'character': {},
      'attributeValue': {},
    },
    'number': {
      'integer': {},
      'float': {},
    },
    'bool': {},
    'regexp': {},
    'escape': {},
    'color': {},
    'url': {},
  },
  'keyword': {
    'self': {},
    'null': {},
    'atom': {},
    'unit': {},
    'modifier': {},
    'operatorKeyword': {},
    'controlKeyword': {},
    'definitionKeyword': {},
    'moduleKeyword': {},
  },
  'operator': {
    'derefOperator': {},
    'arithmeticOperator': {},
    'logicOperator': {},
    'bitwiseOperator': {},
    'compareOperator': {},
    'updateOperator': {},
    'definitionOperator': {},
    'typeOperator': {},
    'controlOperator': {},
  },
  'punctuation': {
    'separator': {},
    'bracket': {
      'angleBracket': {},
      'squareBracket': {},
      'paren': {},
      'brace': {},
    },
  },
  'content': {
    'heading': {
      'heading1': {},
      'heading2': {},
      'heading3': {},
      'heading4': {},
      'heading5': {},
      'heading6': {},
    },
    'contentSeparator': {},
    'list': {},
    'quote': {},
    'emphasis': {},
    'strong': {},
    'link': {},
    'monospace': {},
    'strikethrough': {},
  },
  'inserted': {},
  'deleted': {},
  'changed': {},
  'invalid': {},
  'meta': {
    'documentMeta': {},
    'annotation': {},
    'processingInstruction': {},
  },
};

export const tagMap: { [index: string]: any } = {
  'comment': t.comment,
  'lineComment': t.lineComment,
  'blockComment': t.blockComment,
  'docComment': t.docComment,
  'name': t.name,
  'variableName': t.variableName,
  'typeName': t.typeName,
  'tagName': t.tagName,
  'propertyName': t.propertyName,
  'attributeName': t.attributeName,
  'className': t.className,
  'labelName': t.labelName,
  'namespace': t.namespace,
  'macroName': t.macroName,
  'literal': t.literal,
  'string': t.string,
  'docString': t.docString,
  'character': t.character,
  'attributeValue': t.attributeValue,
  'number': t.number,
  'integer': t.integer,
  'float': t.float,
  'bool': t.bool,
  'regexp': t.regexp,
  'escape': t.escape,
  'color': t.color,
  'url': t.url,
  'keyword': t.keyword,
  'self': t.self,
  'null': t.null,
  'atom': t.atom,
  'unit': t.unit,
  'modifier': t.modifier,
  'operatorKeyword': t.operatorKeyword,
  'controlKeyword': t.controlKeyword,
  'definitionKeyword': t.definitionKeyword,
  'moduleKeyword': t.moduleKeyword,
  'operator': t.operator,
  'derefOperator': t.derefOperator,
  'arithmeticOperator': t.arithmeticOperator,
  'logicOperator': t.logicOperator,
  'bitwiseOperator': t.bitwiseOperator,
  'compareOperator': t.compareOperator,
  'updateOperator': t.updateOperator,
  'definitionOperator': t.definitionOperator,
  'typeOperator': t.typeOperator,
  'controlOperator': t.controlOperator,
  'punctuation': t.punctuation,
  'separator': t.separator,
  'bracket': t.bracket,
  'angleBracket': t.angleBracket,
  'squareBracket': t.squareBracket,
  'paren': t.paren,
  'brace': t.brace,
  'content': t.content,
  'heading': t.heading,
  'heading1': t.heading1,
  'heading2': t.heading2,
  'heading3': t.heading3,
  'heading4': t.heading4,
  'heading5': t.heading5,
  'heading6': t.heading6,
  'contentSeparator': t.contentSeparator,
  'list': t.list,
  'quote': t.quote,
  'emphasis': t.emphasis,
  'strong': t.strong,
  'link': t.link,
  'monospace': t.monospace,
  'strikethrough': t.strikethrough,
  'inserted': t.inserted,
  'deleted': t.deleted,
  'changed': t.changed,
  'invalid': t.invalid,
  'meta': t.meta,
  'documentMeta': t.documentMeta,
  'annotation': t.annotation,
  'processingInstruction': t.processingInstruction,
};

export const editorMap: { [index: string]: {
  identifier: string,
  description: string,
  props: string[],
}} = {
  'editor': {
    identifier: '&',
    description: 'the editor',
    props: ['backgroundColor', 'color'],
  },
  'cursor': {
    identifier: '.cm-content',
    description: 'the cursor',
    props: ['caretColor'],
  },
  'gutters': {
    identifier: '.cm-gutters',
    description: 'line number bar',
    props: ['backgroundColor', 'color', 'border'],
  },
  'selection': {
    identifier: '&.cm-focused .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection',
    description: 'current selection',
    props: ['backgroundColor', 'color'],
  },
  'active line': {
    identifier: '.cm-activeLine',
    description: 'line the cursor is on',
    props: ['backgroundColor', 'color'],
  },
  'active line gutter': {
    identifier: '.cm-selectionMatch',
    description: 'gutter on the active line',
    props: ['backgroundColor'],
  },
  'panels': {
    identifier: '.cm-panels',
    description: 'the panels at the top/bottom of the editor',
    props: ['backgroundColor', 'color'],
  },
  'panels top': {
    identifier: '.cm-panels.cm-panels-top',
    description: 'panels at the top of the editor',
    props: ['backgroundColor', 'borderTop'],
  },
  'panels bottom': {
    identifier: '.cm-panels.cm-panels-bottom',
    description: 'panels at the bottom of the editor',
    props: ['backgroundColor', 'borderBottom'],
  },
  'search match': {
    identifier: '.cm-searchMatch',
    description: 'color of the matches found',
    props: ['backgroundColor', 'outline'],
  },
  'search match selected': {
    identifier: '.cm-searchMatch.cm-searchMatch-selected',
    description: 'color the selected search match',
    props: ['backgroundColor'],
  },
  'selection match': {
    identifier: '.cm-selectionMatch',
    description: 'other matches of the selected text',
    props: ['backgroundColor', 'color'],
  },
};
